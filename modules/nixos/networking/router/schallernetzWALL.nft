# https://wiki.nftables.org/wiki-nftables/index.php/Quick_reference-nftables_in_10_minutes

# ula ***REMOVED_IPv6***

chain input { # Everything that is beeing sent to this host.
        type filter hook input priority filter + 1; policy drop;

        ct state invalid drop # Drop invalid connections.
        ct state { established, related } accept # Allow established traffic.

        icmp type echo-request accept # Allow ping.
        icmpv6 type != { nd-redirect, 139 } accept # Accept all ICMPv6 messages except redirects and node information queries (type 139).  See RFC 4890, section 4.4.

        iifname $wan udp dport 546 accept # dhcpv6-client
        iifname $wan drop # Making double sure to block access to this host from the internet.

        iifname lo accept # Accept everything from loopback interface. Allows itself to reach the internet.

        iifname lan tcp dport 22 accept
        iifname management accept
}

chain forward { # Everything that is beeing forwarded.
        type filter hook forward priority filter; policy drop;

        ct state invalid drop # Drop invalid packets.
        ct state established,related accept # Allow established traffic.

        # https://wiki.nftables.org/wiki-nftables/index.php/Classic_perimetral_firewall_example
        oifname vmap {
                $wan: jump wan_in,
                untrusted: jump untrusted_in,
                lan: jump lan_in,
                server: jump server_in,
                dmz: jump dmz_in,
                management: drop,
        }
}

chain wan_in { # what to allow to the internet (into wan)... except already established traffic from the internet (from wan)
        iifname != management accept
}
chain untrusted_in { # what to allow into untrusted... except already established traffic from untrusted
        iifname lan accept
}
chain lan_in { # what to allow into lan... except already established traffic from lan
}
chain server_in { # what to allow into server... except already established traffic from server
        iifname $wan drop
        # ---
        udp dport 53 limit rate 70/second accept # dns
        tcp dport 443 limit rate 35/second accept # https
        iifname lan tcp dport 22 accept # ssh
        iifname lan tcp dport 80 accept # http
}
chain dmz_in { # what to allow into dmz... except already established traffic from dmz
        tcp dport 443 accept
}
